from django.db import models

class champion(models.Model):
    id = models.CharField(primary_key=True, max_length=30)
    key = models.CharField(max_length=30)
    name = models.CharField(max_length=30)
    title = models.CharField(max_length=30)
    blurb = models.CharField(max_length=300)
    attack = models.IntegerField()
    defense = models.IntegerField()
    magic = models.IntegerField()
    difficulty = models.IntegerField()
    tags = models.CharField(max_length=30)
    partype = models.CharField(max_length=30)
    hp = models.IntegerField()
    hpperlevel = models.IntegerField()
    mpperlevel = models.IntegerField()
    movespeed = models.IntegerField()
    armor = models.IntegerField()
    armorperlevel = models.IntegerField()
    spellblock = models.IntegerField()
    spellblockperlevel = models.IntegerField()
    attackrange = models.IntegerField()
    hpregen = models.IntegerField()
    hpregenperlevel = models.IntegerField()
    mpregen = models.IntegerField()
    mpregenperlevel = models.IntegerField()
    crit = models.IntegerField()
    critperlevel = models.IntegerField()
    attackdamage = models.IntegerField()
    attackdamageperlevel = models.IntegerField()
    attackspeedperlevel = models.IntegerField()
    attackspeed = models.IntegerField()

class gameResult(models.Model):
    id = models.IntegerField(primary_key=True)
    userId = models.CharField(max_length=30)
    line = models.CharField(max_length=30)
    championId = models.CharField(max_length=30)
    win = models.IntegerField()
    kills = models.IntegerField()
    death = models.IntegerField()
    assists = models.IntegerField()

class item_data3(models.Model):

    id = models.IntegerField(primary_key=True)
    char_id = models.IntegerField(default=0,null=True,blank=True)
    item_id = models.IntegerField(default=0,null=True)
    item_cnt = models.IntegerField(default=0,null=True)

class name_data(models.Model):
    # id = models.IntegerField(primary_key=True)
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=200)
    key = models.IntegerField(default=0,null=True)


class duodata(models.Model):
    id = models.CharField(primary_key=True, max_length=30)
    Bot1 = models.CharField(max_length=30)
    Bot2 = models.CharField(max_length=30)
    Play = models.CharField(max_length=30)

class Pickban(models.Model):
   id = models.CharField(primary_key=True, max_length=30)
   name = models.CharField(max_length=30)
   pickcount = models.IntegerField()
   bancount = models.IntegerField()

class itempick(models.Model):
    item_id = models.IntegerField(primary_key=True)
    item_cnt = models.IntegerField()

class TeamData(models.Model):
    id = models.IntegerField(primary_key=True)
    gameduration = models.IntegerField()
    team1_Win = models.CharField(max_length=30)
    team1_firstBlood = models.BooleanField()
    team1_firstTower = models.BooleanField()
    team1_firstInhibitor = models.BooleanField()
    team1_firstBaron = models.BooleanField()
    team1_firstDragon = models.BooleanField()
    team1_firstRiftHerald = models.BooleanField()
    team1_towerKills = models.IntegerField()
    team1_inhibitorKills = models.IntegerField()
    team1_baronKills = models.IntegerField()
    team1_dragonKills = models.IntegerField()
    team1_vilemawKills = models.IntegerField()
    team1_riftHeraldKills = models.IntegerField()
    team1_dominionVictoryScore = models.IntegerField()
    team2_Win = models.CharField(max_length=30)
    team2_firstBlood = models.BooleanField()
    team2_firstTower = models.BooleanField()
    team2_firstInhibitor = models.BooleanField()
    team2_firstBaron = models.BooleanField()
    team2_firstDragon = models.BooleanField()
    team2_firstRiftHerald = models.BooleanField()
    team2_towerKills = models.IntegerField()
    team2_inhibitorKills = models.IntegerField()
    team2_baronKills = models.IntegerField()
    team2_dragonKills = models.IntegerField()
    team2_vilemawKills = models.IntegerField()
    team2_riftHeraldKills = models.IntegerField()
    team2_dominionVictoryScore = models.IntegerField()

class Bancount3(models.Model):
    id = models.IntegerField(primary_key=True)
    name = models.CharField(max_length=30)
    char_id = models.IntegerField(default=0,null=True)
    ban_char_id = models.IntegerField(default=0,null=True)
    cnt = models.IntegerField(default=0,null=True)

class naivedata(models.Model):
    id = models.IntegerField(primary_key=True)
    Bot1 = models.CharField(max_length=10)
    Bot2 = models.CharField(max_length=10)
    Bot3 = models.CharField(max_length=10)
    Bot4 = models.CharField(max_length=10)
    Bot5 = models.CharField(max_length=10)
    fBlood = models.CharField(max_length=10)
    fT = models.CharField(max_length=10)
    fD = models.CharField(max_length=10)
    fB = models.CharField(max_length=10)
    TK = models.CharField(max_length=10)
    DK = models.CharField(max_length=10)
    BK = models.CharField(max_length=10)
    Win = models.CharField(max_length=10)
    all = models.CharField(max_length=50)
